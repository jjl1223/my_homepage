[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "나의 사이트",
    "section": "",
    "text": "#파이썬 코드 청크 * 단축키: ctrl + Alt + I"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\ndf=pd.DataFrame({\n                    \"제품\":[\"사과\",'딸기','수박'],\n                    \"가격\":[1800,1500,3000],\n                    \"판매량\":[24,38,13]\n})\n\nsum(df[\"가격\"])/3\nnp.mean(df[\"판매량\"])\n\nnp.float64(25.0)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n# 수달 야구 최고~"
  },
  {
    "objectID": "HW2.html",
    "href": "HW2.html",
    "title": "HW2",
    "section": "",
    "text": "##144p #1\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\ndf.head\ndf[\"displ\"] #데이터뽑기\nlow=df.query(\"displ&lt;=4\") #정해진 데이터 뽑기 안됨 조건문만 가능\nhigh=df.query(\"displ&gt;=5\")\n\nhigh[\"hwy\"]\nprint(np.mean(low[\"hwy\"]))\nprint(np.mean(high[\"hwy\"]))\nnp.mean(low[\"hwy\"])\nnp.mean(low[\"hwy\"]) &gt;=np.mean(high[\"hwy\"])\n\n25.96319018404908\n18.07894736842105\n\n\nnp.True_\n\n\n##144p #2\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\nau=df.query('manufacturer == \"audi\"')\nto=df.query('manufacturer == \"toyota\"')\nau\nprint(np.mean(au[\"cty\"]))\nprint(np.mean(to[\"cty\"]))\nnp.mean(au[\"cty\"])&gt;=np.mean(to[\"cty\"])\n\n17.61111111111111\n18.529411764705884\n\n\nnp.False_\n\n\n144 #3\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\ncar=df.query('manufacturer==\"chevrolet\"' and 'manufacturer == \"ford\"' and 'manufacturer == \"honda\"')\n\nnp.mean(car[\"hwy\"]) #아래까지 가능\ncar[\"hwy\"].mean()\n\nnp.float64(32.55555555555556)\n\n\n#153\n\nimport pandas as pd\nimport numpy as np\ndf=pd.read_csv(\"data/mpg.csv\")\nau=df.query('manufacturer==\"audi\"')\nau=au.sort_values(['hwy'],ascending=[True])\nau.head(5)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n17\naudi\na6 quattro\n4.2\n2008\n8\nauto(s6)\n4\n16\n23\np\nmidsize\n\n\n15\naudi\na6 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n24\np\nmidsize\n\n\n14\naudi\na4 quattro\n3.1\n2008\n6\nmanual(m6)\n4\n15\n25\np\ncompact\n\n\n11\naudi\na4 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n25\np\ncompact\n\n\n8\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n\n\n\n\n\n\n\n##158p\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\n#1\ndfc=df.copy()\ndfc[\"add\"]=dfc[\"cty\"]+dfc[\"hwy\"]\nprint(dfc.head())\n#2\ndfc[\"mean\"]=dfc[\"add\"]/2\n#3\ndfc=dfc.sort_values(['mean'],ascending = [False])\ndfc.head(3)\n#4\ndf = df.assign( add= lambda x: x[\"cty\"]+x[\"hwy\"],\n          mean= lambda x: x[\"add\"]/2)\\\n          .sort_values('mean',ascending =[False])\\\n          .head()\ndf    \n\n  manufacturer model  displ  year  cyl       trans drv  cty  hwy fl category  \\\n0         audi    a4    1.8  1999    4    auto(l5)   f   18   29  p  compact   \n1         audi    a4    1.8  1999    4  manual(m5)   f   21   29  p  compact   \n2         audi    a4    2.0  2008    4  manual(m6)   f   20   31  p  compact   \n3         audi    a4    2.0  2008    4    auto(av)   f   21   30  p  compact   \n4         audi    a4    2.8  1999    6    auto(l5)   f   16   26  p  compact   \n\n   add  \n0   47  \n1   50  \n2   51  \n3   51  \n4   42  \n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nadd\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n65\n32.5\n\n\n197\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n61\n30.5"
  },
  {
    "objectID": "HW1.html",
    "href": "HW1.html",
    "title": "HW1",
    "section": "",
    "text": "title: “hw1” jupyter: python3\n\n\n84p 1번\n\nimport pandas as pd\nimport numpy as np\n#1\ndf=pd.DataFrame({\n                    \"제품\":[\"사과\",'딸기','수박'],\n                    \"가격\":[1800,1500,3000],\n                    \"판매량\":[24,38,13]\n})\ndf\n#2\nsum(df[\"가격\"])/3\nnp.mean(df[\"판매량\"])\n\nnp.float64(25.0)\n\n\n\n\n115P\n\nimport pandas as pd\nimport numpy as np\n#1\nmpg=pd.read_csv('data/mpg.csv')\n\n\nmpg_c=mpg.copy()\n#2\nmpg_c=mpg_c.rename(columns={\"cty\" : \"city\"})\nmpg_c=mpg_c.rename(columns={\"hwy\" : \"highway\"})\n#3\nmpg_c.head\nmpg_c\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n130P\n\nimport pandas as pd\nimport numpy as np\n#1\nmid=pd.read_csv('data/midwest.csv')\nmid.head()\nmid.tail()\nmid.shape\nmid.info()\nmid.describe()\nmid\n#2\nmid=mid.rename(columns = {\"poptotal\":\"total\"})\nmid=mid.rename(columns = {\"popasian\":\"asian\"})\nmid\n#3\nmid[\"100asian\"]=mid[\"asian\"]/mid[\"total\"]*100\nmid[\"100asian\"].plot.hist()\nimport matplotlib.pyplot as plt # 도표로 보여주게 하기위해서 추가한것 클린하는법은 plt.clf()\nplt.show() # 도표로 보여주게 하기위해서 추가한것 \nplt.clf()\n#4\nmean=np.mean(mid[\"100asian\"])\nmid[\"compare\"] = np.where(mid[\"100asian\"]&gt;mean,\"large\",\"small\")\n#5\ncom=mid[\"compare\"].value_counts()\ncom.plot.bar()\nplt.show()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "blog",
    "section": "",
    "text": "HW3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n교재 챕터8\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHW1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\n\n\n\n\n\n\nHW2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/HW1/index.html",
    "href": "posts/HW1/index.html",
    "title": "HW1",
    "section": "",
    "text": "84p 1번\n\nimport pandas as pd\nimport numpy as np\n#1\ndf=pd.DataFrame({\n                    \"제품\":[\"사과\",'딸기','수박'],\n                    \"가격\":[1800,1500,3000],\n                    \"판매량\":[24,38,13]\n})\ndf\n#2\nsum(df[\"가격\"])/3\nnp.mean(df[\"판매량\"])\n\nnp.float64(25.0)\n\n\n\n\n115P\n\nimport pandas as pd\nimport numpy as np\n#1\nmpg=pd.read_csv('data/mpg.csv')\n\n\nmpg_c=mpg.copy()\n#2\nmpg_c=mpg_c.rename(columns={\"cty\" : \"city\"})\nmpg_c=mpg_c.rename(columns={\"hwy\" : \"highway\"})\n#3\nmpg_c.head\nmpg_c\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n130P\n\nimport pandas as pd\nimport numpy as np\n#1\nmid=pd.read_csv('data/midwest.csv')\nmid.head()\nmid.tail()\nmid.shape\nmid.info()\nmid.describe()\nmid\n#2\nmid=mid.rename(columns = {\"poptotal\":\"total\"})\nmid=mid.rename(columns = {\"popasian\":\"asian\"})\nmid\n#3\nmid[\"100asian\"]=mid[\"asian\"]/mid[\"total\"]*100\nmid[\"100asian\"].plot.hist()\nimport matplotlib.pyplot as plt # 도표로 보여주게 하기위해서 추가한것 클린하는법은 plt.clf()\nplt.show() # 도표로 보여주게 하기위해서 추가한것 \nplt.clf()\n#4\nmean=np.mean(mid[\"100asian\"])\nmid[\"compare\"] = np.where(mid[\"100asian\"]&gt;mean,\"large\",\"small\")\n#5\ncom=mid[\"compare\"].value_counts()\ncom.plot.bar()\nplt.show()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB"
  },
  {
    "objectID": "posts/HW2/index.html",
    "href": "posts/HW2/index.html",
    "title": "HW2",
    "section": "",
    "text": "##144p #1\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\ndf.head\ndf[\"displ\"] #데이터뽑기\nlow=df.query(\"displ&lt;=4\") #정해진 데이터 뽑기 안됨 조건문만 가능\nhigh=df.query(\"displ&gt;=5\")\n\nhigh[\"hwy\"]\nprint(np.mean(low[\"hwy\"]))\nprint(np.mean(high[\"hwy\"]))\nnp.mean(low[\"hwy\"])\nnp.mean(low[\"hwy\"]) &gt;=np.mean(high[\"hwy\"])\n\n25.96319018404908\n18.07894736842105\n\n\nnp.True_\n\n\n##144p #2\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\nau=df.query('manufacturer == \"audi\"')\nto=df.query('manufacturer == \"toyota\"')\nau\nprint(np.mean(au[\"cty\"]))\nprint(np.mean(to[\"cty\"]))\nnp.mean(au[\"cty\"])&gt;=np.mean(to[\"cty\"])\n\n17.61111111111111\n18.529411764705884\n\n\nnp.False_\n\n\n144 #3\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\ncar=df.query('manufacturer==\"chevrolet\"' and 'manufacturer == \"ford\"' and 'manufacturer == \"honda\"')\n\nnp.mean(car[\"hwy\"]) #아래까지 가능\ncar[\"hwy\"].mean()\n\nnp.float64(32.55555555555556)\n\n\n#153\n\nimport pandas as pd\nimport numpy as np\ndf=pd.read_csv(\"data/mpg.csv\")\nau=df.query('manufacturer==\"audi\"')\nau=au.sort_values(['hwy'],ascending=[True])\nau.head(5)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n17\naudi\na6 quattro\n4.2\n2008\n8\nauto(s6)\n4\n16\n23\np\nmidsize\n\n\n15\naudi\na6 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n24\np\nmidsize\n\n\n14\naudi\na4 quattro\n3.1\n2008\n6\nmanual(m6)\n4\n15\n25\np\ncompact\n\n\n11\naudi\na4 quattro\n2.8\n1999\n6\nauto(l5)\n4\n15\n25\np\ncompact\n\n\n8\naudi\na4 quattro\n1.8\n1999\n4\nauto(l5)\n4\n16\n25\np\ncompact\n\n\n\n\n\n\n\n##158p\n\nimport pandas as pd\nimport numpy as np    \ndf=pd.read_csv(\"data/mpg.csv\")\n#1\ndfc=df.copy()\ndfc[\"add\"]=dfc[\"cty\"]+dfc[\"hwy\"]\nprint(dfc.head())\n#2\ndfc[\"mean\"]=dfc[\"add\"]/2\n#3\ndfc=dfc.sort_values(['mean'],ascending = [False])\ndfc.head(3)\n#4\ndf = df.assign( add= lambda x: x[\"cty\"]+x[\"hwy\"],\n          mean= lambda x: x[\"add\"]/2)\\\n          .sort_values('mean',ascending =[False])\\\n          .head()\ndf    \n\n  manufacturer model  displ  year  cyl       trans drv  cty  hwy fl category  \\\n0         audi    a4    1.8  1999    4    auto(l5)   f   18   29  p  compact   \n1         audi    a4    1.8  1999    4  manual(m5)   f   21   29  p  compact   \n2         audi    a4    2.0  2008    4  manual(m6)   f   20   31  p  compact   \n3         audi    a4    2.0  2008    4    auto(av)   f   21   30  p  compact   \n4         audi    a4    2.8  1999    6    auto(l5)   f   16   26  p  compact   \n\n   add  \n0   47  \n1   50  \n2   51  \n3   51  \n4   42  \n\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nadd\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n65\n32.5\n\n\n197\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n61\n30.5"
  },
  {
    "objectID": "index.html#수식-입력-방버",
    "href": "index.html#수식-입력-방버",
    "title": "나의 사이트",
    "section": "수식 입력 방버",
    "text": "수식 입력 방버\n\n인라인 수식: $ 하나로 감싸준다. (본문에 입력)\n디스플레이 수식: $ 두개로 감싸준다.(독립적인 문단)\n\n문장안에 숫자 \\(5^2\\)를 넣어보자 여러숫자들을 따로 떼어 표시하자\n\\[\nx^2+ y^2 = 5\n\\angle 4\n\\]"
  },
  {
    "objectID": "index.html#굵게",
    "href": "index.html#굵게",
    "title": "나의 사이트",
    "section": "굵게",
    "text": "굵게\n랜더링 해줘~ 제발\n\n기울림 이탤릭\n이탤릭 기울림\n\n취소선\n제발 되게해줘\n\n순서가있는 리스트\n순서가 없는 리스트\n\n\n되고\n안되고\n\ngithub\n\n\n\n야구\n\n\n\nAnyone can learn anything -야야\n\n\n\n1%1\n\n0\n\n\n각주[^1] 이다\n각주[^가나다]"
  },
  {
    "objectID": "posts/lecture8/index.html",
    "href": "posts/lecture8/index.html",
    "title": "교재 챕터8",
    "section": "",
    "text": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nmpg=pd.read_csv(\"data/mpg.csv\")\nmpg.columns\n\nIndex(['manufacturer', 'model', 'displ', 'year', 'cyl', 'trans', 'drv', 'cty',\n       'hwy', 'fl', 'category'],\n      dtype='object')\n\n\n##scater plot 사용\n\nsns.scatterplot(data=mpg,x=\"displ\",y=\"hwy\").set(xlim=[3,6],ylim=[10,30])"
  },
  {
    "objectID": "posts/lecture8/index.html#seaborn-패키지-불러오기",
    "href": "posts/lecture8/index.html#seaborn-패키지-불러오기",
    "title": "교재 챕터8",
    "section": "",
    "text": "import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nmpg=pd.read_csv(\"data/mpg.csv\")\nmpg.columns\n\nIndex(['manufacturer', 'model', 'displ', 'year', 'cyl', 'trans', 'drv', 'cty',\n       'hwy', 'fl', 'category'],\n      dtype='object')\n\n\n##scater plot 사용\n\nsns.scatterplot(data=mpg,x=\"displ\",y=\"hwy\").set(xlim=[3,6],ylim=[10,30])"
  },
  {
    "objectID": "posts/lecture8/index.html#barplot-사용하기",
    "href": "posts/lecture8/index.html#barplot-사용하기",
    "title": "교재 챕터8",
    "section": "barplot() 사용하기",
    "text": "barplot() 사용하기\n#데이터 전처리하기\n\ndf_mpg= mpg.groupby(\"drv\",as_index=False) \\\n            .agg(mean_hwy=(\"hwy\",\"mean\"))\n            \ndf_mpg\n\n\n\n\n\n\n\n\ndrv\nmean_hwy\n\n\n\n\n0\n4\n19.174757\n\n\n1\nf\n28.160377\n\n\n2\nr\n21.000000\n\n\n\n\n\n\n\n#barplot 사용해서 그래프 그리기\n\nsns.barplot(data=df_mpg.sort_values(\"mean_hwy\"), x=\"drv\",y=\"mean_hwy\",hue=\"drv\" )   \n\n\n\n\n\n\n\n\n##count plot 사용하기\n\nsns.countplot(data=mpg,x='drv')"
  },
  {
    "objectID": "posts/lecture8/index.html#scatter-plot-사용하기-316p",
    "href": "posts/lecture8/index.html#scatter-plot-사용하기-316p",
    "title": "교재 챕터8",
    "section": "scatter plot 사용하기 316P",
    "text": "scatter plot 사용하기 316P\n\npx.scatter(data_frame = mpg, x= 'cty',y='hwy',color='drv')"
  },
  {
    "objectID": "posts/lecture8/index.html#새로운-막대-그래프",
    "href": "posts/lecture8/index.html#새로운-막대-그래프",
    "title": "교재 챕터8",
    "section": "새로운 막대 그래프",
    "text": "새로운 막대 그래프\n\npx.bar(mpg, x=\"drv\",y=\"cty\",color=\"category\" )"
  },
  {
    "objectID": "posts/lecture8/index.html#새로운-막대-그래프-318p",
    "href": "posts/lecture8/index.html#새로운-막대-그래프-318p",
    "title": "교재 챕터8",
    "section": "새로운 막대 그래프 318p",
    "text": "새로운 막대 그래프 318p\n\npx.bar(mpg, x=\"drv\",y=\"cty\",color=\"category\" )"
  },
  {
    "objectID": "posts/lecture8/index.html#선그래프-319p",
    "href": "posts/lecture8/index.html#선그래프-319p",
    "title": "교재 챕터8",
    "section": "선그래프 319p",
    "text": "선그래프 319p\n\npx.line(mpg,x='model',y='year')"
  },
  {
    "objectID": "posts/HW3/index.html",
    "href": "posts/HW3/index.html",
    "title": "HW3",
    "section": "",
    "text": "#1\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nmpg=pd.read_csv(\"data/mpg.csv\")\nsns.scatterplot(data=mpg,x='cty',y='hwy')\nplt.show()\nplt.clf()\n#2\nmidw=pd.read_csv(\"data/midwest.csv\")\nmidw.columns\nsns.scatterplot(data =midw,x='poptotal',y='popasian').set(xlim=[0,500000],ylim=[0,10000])\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#2\nmidw=pd.read_csv(\"data/midwest.csv\")\nmidw.columns\nsns.scatterplot(data =midw,x='poptotal',y='popasian').set(xlim=[0,500000],ylim=[0,10000])\nplt.show()"
  },
  {
    "objectID": "posts/HW3/index.html#p",
    "href": "posts/HW3/index.html#p",
    "title": "HW3",
    "section": "",
    "text": "#1\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nmpg=pd.read_csv(\"data/mpg.csv\")\nsns.scatterplot(data=mpg,x='cty',y='hwy')\nplt.show()\nplt.clf()\n#2\nmidw=pd.read_csv(\"data/midwest.csv\")\nmidw.columns\nsns.scatterplot(data =midw,x='poptotal',y='popasian').set(xlim=[0,500000],ylim=[0,10000])\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#2\nmidw=pd.read_csv(\"data/midwest.csv\")\nmidw.columns\nsns.scatterplot(data =midw,x='poptotal',y='popasian').set(xlim=[0,500000],ylim=[0,10000])\nplt.show()"
  },
  {
    "objectID": "posts/HW3/index.html#section",
    "href": "posts/HW3/index.html#section",
    "title": "HW3",
    "section": "",
    "text": "211p\n\n#1\ndf=mpg.query('category==\"suv\"')\\\n      .groupby('manufacturer',as_index=False)\\\n      .agg(mean_cty=(('cty','mean')))\\\n      .sort_values('mean_cty',ascending=False)\\\n      .head()\n      \nsns.barplot(data=df,x='manufacturer',y= 'mean_cty')\n\n\n\n\n\n\n\n\n\n#2\nimport seaborn as sns\ndf=mpg.groupby('category',as_index=False)\\\n      .agg(n=('category','count'))\\\n      .sort_values('n',ascending=False)\nsns.barplot(data=df,x='category',y='n')"
  }
]