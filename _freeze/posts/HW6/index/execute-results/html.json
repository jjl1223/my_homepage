{
  "hash": "4856121673b6ec58b11ce52658f20aa0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: HW6\n---\n\n::: {#2ce585d9 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nraw_welfare = pd.read_spss('data/koweps/Koweps_hpwc14_2019_beta2.sav')\n\nwelfare = raw_welfare.copy()\n\nwelfare\n# 칼럼 알아보기 쉬운 이름으로 바꿔주기\nwelfare= welfare.rename(\n    \n    columns = { \n        'h14_g3' : 'sex',\n        'h14_g4' : \"birth\",\n        'h14_g10' : \"marriage_type\",\n        'h14_g11' : \"religion\",\n        'p1402_8aq1' : \"income\",\n        'h14_eco9' : \"code_job\",\n        \"h14_reg7\" : \"code_region\"\n        \n        }\n)\n\n#쓰는 데이터만 가져오기\nwelfare=welfare[[\"sex\", \"birth\", \"marriage_type\",\n                \"religion\", \"income\", \"code_job\", \"code_region\"]]\nwelfare.shape\n\n\nwelfare[\"sex\"] = np.where(welfare[\"sex\"]==1, 'male', 'female' )\n\n\nfrom scipy.stats import norm\nz_005=norm.ppf(0.95,loc=0,scale=1) #z값 구하기\n# 성별데이터 따로 만들기\nfemale_data=welfare.query('sex==\"female\"')\nmale_data=welfare.query('sex==\"male\"')\n\nfe=female_data.dropna(subset='income')[\"income\"] #female income 데이터\nme=male_data.dropna(subset='income')[\"income\"] #male income 데이터\n\nfe_v=np.var(fe,ddof=1) #n-1로 나눈 값(표본분산)\nme_v=np.var(me,ddof=1)\n\nfe_n=fe.count() #표본수 세기\nme_n=me.count()\n#평균값 만들기\nfe_mean_d=female_data.dropna(subset=\"income\") \\\n                     .groupby(\"sex\",as_index=False) \\\n                     .agg(mean_income = (\"income\",\"mean\"))\nme_mean_d=male_data.dropna(subset=\"income\") \\\n                  .groupby(\"sex\",as_index=False) \\\n                  .agg(mean_income = (\"income\",\"mean\"))\nfe_mean=fe_mean_d['mean_income'][0]                  \nme_mean=me_mean_d['mean_income'][0]                     \n                  \n#신뢰구간 연산                    \nfemale_a=fe_mean +z_005 *np.sqrt(fe_v) /np.sqrt(fe_n)  # 평균+z*표본분산/표본수\nfemale_b=fe_mean  -z_005 *np.sqrt(fe_v) /np.sqrt(fe_n) \n\nmale_a=me_mean +z_005 *np.sqrt(me_v) /np.sqrt(me_n) \nmale_b=me_mean  -z_005 *np.sqrt(me_v) /np.sqrt(me_n) \nprint(\"여자평균=\",fe_mean)\nprint(\"남자평균=\",me_mean)\nprint(\"남자 표본분산=\",fe_v)\nprint(\"여자 표본분산=\",me_v)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n여자평균= 186.29309576837417\n남자평균= 349.03757099169945\n남자 표본분산= 17439.157372096437\n여자 표본분산= 47463.96187451692\n```\n:::\n:::\n\n\n##여자 신뢰구간 검은색 남자 신뢰구간 갈색\n\n::: {#c17b5c12 .cell execution_count=2}\n``` {.python .cell-code}\n#전체 그래프 그리기\nwelfare.dropna(subset=\"income\").shape\nsex_income=welfare.dropna(subset=\"income\") \\\n       .groupby(\"sex\",as_index=False) \\\n       .agg(mean_income = (\"income\",\"mean\"))\nsns.barplot(data=sex_income,x=\"sex\",y=\"mean_income\", hue=\"sex\")\nplt.axhline(y = female_a, color = 'black', linestyle = '-', linewidth = 2)\nplt.axhline(y = female_b, color = 'black', linestyle = '-', linewidth = 2)\nplt.axhline(y = male_a, color = 'brown', linestyle = '-', linewidth = 2)\nplt.axhline(y = male_b, color = 'brown', linestyle = '-', linewidth = 2)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n::: {#f1476b13 .cell execution_count=3}\n``` {.python .cell-code}\nwelfare.dropna(subset=\"income\").shape\nsex_income=welfare.dropna(subset=\"income\") \\\n       .groupby(\"sex\",as_index=False) \\\n       .agg(mean_income = (\"income\",\"mean\"))\nsns.barplot(data=sex_income,x=\"sex\",y=\"mean_income\", hue=\"sex\")\nplt.plot([-0.1, 0.1], [female_a, female_a], color='black')\nplt.plot([-0.1, 0.1], [female_b, female_b], color='black')\n\nplt.plot([0, 0], [female_a, female_b], color='black')\nplt.plot([1, 1], [male_a, male_b], color='black')\n\nplt.plot([0.9, 1.1], [male_a, male_a], color='black')\nplt.plot([0.9, 1.1], [male_b, male_b], color='black')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n##신뢰구간 선이 겹쳐서 나오는 문제가 발생\n남자 여자 그래프 따로 그려서 보여주기\n\n::: {#ff927f72 .cell execution_count=4}\n``` {.python .cell-code}\n#그리기용 데이터 프레임만들기\nfe_draw=pd.DataFrame({'sex' :[\"female\"],\n                   'mean_income' : [fe_mean]   })\nme_draw=pd.DataFrame({'sex' :[\"male\"],\n                   'mean_income' : [me_mean]   })\n#그래프 따로 그리기\n#여자 그래프\nsns.barplot(data=fe_draw,x=\"sex\",y=\"mean_income\", hue=\"sex\")\nplt.axhline(y = female_a, color = 'black', linestyle = '-', linewidth = 2)\nplt.axhline(y = female_b, color = 'black', linestyle = '-', linewidth = 2)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n::: {#ba72fb68 .cell execution_count=5}\n``` {.python .cell-code}\n#남자 그래프\nsns.barplot(data=me_draw,x=\"sex\",y=\"mean_income\", hue=\"sex\")\nplt.axhline(y = male_a, color = 'black', linestyle = '-', linewidth = 2)\nplt.axhline(y = male_b, color = 'black', linestyle = '-', linewidth = 2)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}