{
  "hash": "d1625cc141fe8a45675fcdd21e1c3118",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"HW9\"\njupyter: python3\n---\n\n\n1 종속변수: 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미\n\n독립변수:\n\n골수의 세포성 (CELL)\n골수편의 백혈구 비율 (SMEAR)\n골수의 백혈병 세포 침투 비율 (INFIL)\n골수 백혈병 세포의 라벨링 인덱스 (LI)\n말초혈액의 백혈병 세포 수 (BLAST)\n치료 시작 전 최고 체온 (TEMP)\n\n# 문제 1.\n\n데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.\n\n::: {#b5e78ef7 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport statsmodels.api as sm\nimport numpy as np\n\n\n# 텍스트 파일 경로\n#txt_file_path = 'data/leukemia_remission.txt'\n#csv_file_path = 'data/leukemia_remission.csv'\n\n# 탭으로 구분된 데이터를 읽어서 DataFrame으로 변환\n#data = pd.read_csv(txt_file_path, delimiter='\\t')\n\n# CSV 파일로 저장\n#data.to_csv(csv_file_path, index=False)\n\n#파일 불러오기\nadmission_data= pd.read_csv('data/leukemia_remission.csv')\n\n\n# REMISS의 로그오즈에 대한 모델 만들기 REMISS(독립변수) ~나머지 전부 종속변수\nmodel = sm.formula.logit(\"\tREMISS ~ CELL + SMEAR + INFIL + LI +BLAST +TEMP \", data=admission_data).fit()\n\n# 표 띄우기\nprint(model.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n                           Logit Regression Results                           \n==============================================================================\nDep. Variable:                 REMISS   No. Observations:                   27\nModel:                          Logit   Df Residuals:                       20\nMethod:                           MLE   Df Model:                            6\nDate:                Tue, 10 Sep 2024   Pseudo R-squ.:                  0.3718\nTime:                        10:36:28   Log-Likelihood:                -10.797\nconverged:                       True   LL-Null:                       -17.186\nCovariance Type:            nonrobust   LLR p-value:                   0.04670\n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept     64.2581     74.965      0.857      0.391     -82.670     211.187\nCELL          30.8301     52.135      0.591      0.554     -71.353     133.013\nSMEAR         24.6863     61.526      0.401      0.688     -95.903     145.275\nINFIL        -24.9745     65.281     -0.383      0.702    -152.923     102.974\nLI             4.3605      2.658      1.641      0.101      -0.849       9.570\nBLAST         -0.0115      2.266     -0.005      0.996      -4.453       4.430\nTEMP        -100.1734     77.753     -1.288      0.198    -252.567      52.220\n==============================================================================\n\nPossibly complete quasi-separation: A fraction 0.11 of observations can be\nperfectly predicted. This might indicate that there is complete\nquasi-separation. In this case some parameters will not be identified.\n```\n:::\n:::\n\n\n# 문제 2.\n\n해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.\n\n::: {#8e782260 .cell execution_count=2}\n``` {.python .cell-code}\n#검정 통계량 구하는법 (LL-Null-Log-Likelihood)\nstat_value=-2*(-17.186 - (-10.797))\n\nfrom scipy.stats import chi2\n# 검정 통계량 이용해서 p-value 구하기\n1-chi2.cdf(stat_value, df=6) # df=변수갯수\n# 유의수준 0.05하에서 LLR p-value가 0.0467로 작으므로 통계적으로 유의하다.\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\nnp.float64(0.04669995098322843)\n```\n:::\n:::\n\n\n# 문제 3.\n\n유의수준이 0.2를 기준으로 유의한 변수는 몇개이며, 어느 변수 인가요?\n\n::: {#1f96ccba .cell execution_count=3}\n``` {.python .cell-code}\n# LI와TEMP가   P>|z|가 0.2보다 크므로 2가지 변수가 유의하다\n```\n:::\n\n\n# 문제 4. 다음 환자에 대한 오즈는 얼마인가요?\n\nCELL (골수의 세포성): 65%\n\nSMEAR (골수편의 백혈구 비율): 45%\n\nINFIL (골수의 백혈병 세포 침투 비율): 55%\n\nLI (골수 백혈병 세포의 라벨링 인덱스): 1.2\n\nBLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL\n\nTEMP (치료 시작 전 최고 체온): 0.9\n\n::: {#53500708 .cell execution_count=4}\n``` {.python .cell-code}\n# coef값 불러오는 법\ncoefficients = model.params\n#오즈값구하기 0.0381748712694388\nmy_odds = np.exp(64.2581 +30.8301*0.65 + 24.686316*0.45 -24.9745*0.55 +4.3605*1.2 -0.0115*1.1 -100.1734*0.9)\nmy_odds\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nnp.float64(0.0381748712694388)\n```\n:::\n:::\n\n\n# 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?\n\n::: {#6e480460 .cell execution_count=5}\n``` {.python .cell-code}\nmy_odds / (my_odds+1) # 백혈병 관측되지 않을 확률: 0.036771137816849764\n#3.7%\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nnp.float64(0.036771137816849764)\n```\n:::\n:::\n\n\n# 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.\n\n::: {#e9eb20c1 .cell execution_count=6}\n``` {.python .cell-code}\ncoefficients[6] \n# 온도가 0.1증가할때마다 오즈값이 .0009118819655545162만큼 곱해진다\n# 온도가 0.1증가할때마다 -99.99546000702375%만큼 변한다\n\nnp.exp(-10)*100-100\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6352\\3415036424.py:1: FutureWarning:\n\nSeries.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nnp.float64(-99.99546000702375)\n```\n:::\n:::\n\n\n# 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.\n\n::: {#31c97982 .cell execution_count=7}\n``` {.python .cell-code}\nnp.exp(30.8301)\n# x_hat+-z0.005*std.err\nfrom scipy.stats import norm\nnp.exp(30.8301)-norm.ppf(0.995, loc=0, scale=1)*52.135 \nnp.exp(30.8301)+norm.ppf(0.995, loc=0, scale=1)*52.135 \n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\nnp.float64(24509943297085.28)\n```\n:::\n:::\n\n\n# 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후,50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.\n\n::: {#f9098911 .cell execution_count=8}\n``` {.python .cell-code}\ny=admission_data[\"REMISS\"]\nx=admission_data.drop(\"REMISS\", axis=1)\ny_hat = model.predict(x)\n\ny_hat / (y_hat+1)\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```\n0     4.240997e-01\n1     3.133359e-01\n2     1.521888e-01\n3     1.770734e-01\n4     4.242602e-01\n5     2.542913e-01\n6     2.973711e-01\n7     3.732941e-01\n8     1.308544e-01\n9     3.164493e-04\n10    1.356372e-02\n11    1.464114e-01\n12    2.252045e-04\n13    2.203201e-08\n14    3.783610e-01\n15    4.176373e-01\n16    1.551912e-05\n17    2.173140e-01\n18    9.969575e-06\n19    3.853482e-01\n20    1.152434e-02\n21    3.692368e-03\n22    2.244771e-01\n23    4.599823e-01\n24    4.894632e-01\n25    2.909519e-01\n26    1.825816e-01\ndtype: float64\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}