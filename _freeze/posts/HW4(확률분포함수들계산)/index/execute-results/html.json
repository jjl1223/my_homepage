{
  "hash": "17732bca559c7ea4a6ce592d5946ecce",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: HW4\n---\n\n::: {#fd2c5535 .cell execution_count=1}\n``` {.python .cell-code}\n#숙제1\n#정규분포 pdf 값을 계산하는 자신만의 \n#파이썬 함수를 정의하고 정규분포 mu=3 sigma=2의 pdf를 그릴것\nimport numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\n\ndef jungu(x,mu,sigma):\n    sss=(1/(sigma*((2*math.pi)**0.5)))* math.exp( ( -0.5) *( ((x-mu)/sigma) **2) )\n    return sss\n\njungu(0,3,2)\npdf_values=[]\n\nx_values = np.linspace(-5,10,100)\nfor x in np.linspace(-5,10,100):\n    pdf_values.append(jungu(x,3,2))\n\nplt.plot(x_values,pdf_values,color=\"red\",linewidth=2) # scatter는 점으로 line은 선으로\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=587 height=411}\n:::\n:::\n\n\n***\n\n#2번\n\n::: {#61ee666c .cell execution_count=2}\n``` {.python .cell-code}\n#2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오\n#x ~ N(2,3^2)\n#1) P(x<3)\n#2 P(2<x<5)\n#3 P(x<3 or x>7)\nfrom scipy.stats import norm\n#1)\nnorm.cdf(3,2,3**2)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nnp.float64(0.5442358810453114)\n```\n:::\n:::\n\n\n::: {#a4b0cddd .cell execution_count=3}\n``` {.python .cell-code}\n#2 P(2<x<5)\nnorm.cdf(5,2,3**2)-norm.cdf(2,2,3**2)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nnp.float64(0.13055865981823633)\n```\n:::\n:::\n\n\n::: {#766be783 .cell execution_count=4}\n``` {.python .cell-code}\n#3P(x<3 or x>7)\n1-(norm.cdf(7,2,3**2)-norm.cdf(3,2,3**2)) \n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\nnp.float64(0.8334932417992833)\n```\n:::\n:::\n\n\n***\n\n*3번*\n\n::: {#f8982cc6 .cell execution_count=5}\n``` {.python .cell-code}\n#3.LS 빅데이터 스쿨 학생들의 중간고사점수는 평균이 30이고, 분산이 4인 정규분포를 따른다\n#상위 5%에 해당하는 학생의 점수는?\n\n0.05\n\nnorm.cdf(36.5794,30,4) # 왼쪽에서부터 지정한값까지 나올 확률을 다 더해줌(면적)\nnorm.ppf(0.95,30,4) # 상위 5% 즉 하위 95%값을 반환해줌 #정답\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\nnp.float64(36.579414507805886)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}